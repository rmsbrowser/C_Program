;	Static Name Aliases
;
	TITLE   JMODEM_f.C
	.8087
INCLUDELIB	SLIBCE
_TEXT	SEGMENT  WORD PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT  WORD PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT  WORD PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT  WORD PUBLIC 'BSS'
_BSS	ENDS
DGROUP	GROUP	CONST, _BSS, _DATA
	ASSUME DS: DGROUP, SS: DGROUP
PUBLIC  _fil_blk
PUBLIC  _box_loc
PUBLIC  _attribute
PUBLIC  _signon
PUBLIC  _sta_blk
EXTRN	_int86:NEAR
EXTRN	_puts:NEAR
EXTRN	_sprintf:NEAR
EXTRN	_free:NEAR
EXTRN	_malloc:NEAR
_BSS      SEGMENT
COMM NEAR	_sav_par:	 2:	 56
COMM NEAR	_buffer:	 2:	 6
COMM NEAR	_last_box:	BYTE:	 2
COMM NEAR	_next_line:	BYTE:	 2
COMM NEAR	_start_txt:	BYTE:	 2
COMM NEAR	_start_row:	BYTE:	 2
COMM NEAR	_start_col:	BYTE:	 2
COMM NEAR	_end_row:	BYTE:	 2
COMM NEAR	_end_col:	BYTE:	 2
_BSS      ENDS
_DATA      SEGMENT
$SG372	DB	'     J M O D E M ',  00H
$SG373	DB	'File transfer protocol',  00H
$SG374	DB	'     VERSION 3.03',  00H
$SG376	DB	'   Block : ',  00H
$SG377	DB	'  Length : ',  00H
$SG378	DB	'   Bytes : ',  00H
$SG379	DB	'Rate CPS : ',  00H
$SG380	DB	'  Status : ',  00H
$SG381	DB	'Synchronizing ...',  00H
$SG382	DB	'  Receiving file ',  00H
$SG383	DB	'Transmitting file',  00H
$SG385	DB	'Opening file ',  00H
$SG386	DB	'Can''t open the file!',  00H
$SG387	DB	'Open okay',  00H
$SG388	DB	'File exists, renaming to ',  00H
$SG389	DB	'Can''t create the file!',  00H
$SG408	DB	'%s',  00H
$SG413	DB	'File Size = %-9lu',  00H
$SG423	DB	'%-6d',  00H
$SG424	DB	'%-4d',  00H
$SG425	DB	'%-9lu',  00H
$SG426	DB	'%-4d',  00H
$SG427	DB	'%s',  00H
	ORG	$+68
$SG448	DB	0aH, 'Memory allocation failed!',  00H
	ORG	$-95
_box_loc	DW	05H
	DW	04H
	DW	0dH
	DW	022H
	DW	09H
	DW	0cH
	DW	0eH
	DW	048H
	DW	0cH
	DW	019H
	DW	014H
	DW	034H
_attribute	DW	02c00H
	DW	02f00H
	DW	01f00H
	DW	01e00H
	DW	03c00H
	DW	03e00H
_signon	DW	DGROUP:$SG372
	DW	DGROUP:$SG373
	DW	DGROUP:$SG374
_sta_blk	DW	DGROUP:$SG376
	DW	DGROUP:$SG377
	DW	DGROUP:$SG378
	DW	DGROUP:$SG379
	DW	DGROUP:$SG380
	DW	DGROUP:$SG381
	DW	DGROUP:$SG382
	DW	DGROUP:$SG383
_fil_blk	DW	DGROUP:$SG385
	DW	DGROUP:$SG386
	DW	DGROUP:$SG387
	DW	DGROUP:$SG388
	DW	DGROUP:$SG389
_DATA      ENDS
_TEXT      SEGMENT
	ASSUME	CS: _TEXT
; Line 1
; Line 20
; Line 21
; Line 22
; Line 23
; Line 24
; Line 25
; Line 64
	PUBLIC	_screen
_screen	PROC NEAR
	*** 000000	55 			push	bp
	*** 000001	8b ec 			mov	bp,sp
	*** 000003	83 ec 68 		sub	sp,104
	*** 000006	57 			push	di
	*** 000007	56 			push	si
;	port = -4
;	bios = -102
;	string = -84
;	page = -88
;	screen = -2
;	i = -86
;	text = 8
;	sys = 6
;	function = 4
; Line 68
	*** 000008	c7 46 fc 01 00 		mov	WORD PTR [bp-4],1	;port
; Line 78
	*** 00000d	2b c0 			sub	ax,ax
	*** 00000f	89 46 a0 		mov	WORD PTR [bp-96],ax
	*** 000012	89 46 9e 		mov	WORD PTR [bp-98],ax
	*** 000015	89 46 9c 		mov	WORD PTR [bp-100],ax
	*** 000018	89 46 9a 		mov	WORD PTR [bp-102],ax	;bios
; Line 80
	*** 00001b	8b 46 04 		mov	ax,WORD PTR [bp+4]	;function
	*** 00001e	e9 09 05 		jmp	$S400
; Line 81
	*** 000021	90 			nop	
; Line 82
					$SC404:
; Line 83
; Line 85
	*** 000022	8d 46 9a 		lea	ax,WORD PTR [bp-102]	;bios
	*** 000025	50 			push	ax
	*** 000026	e8 00 00 		call	_kill_curs
	*** 000029	83 c4 02 		add	sp,2
; Line 86
	*** 00002c	a1 50 01 		mov	ax,WORD PTR _attribute
	*** 00002f	0c 20 			or	al,32
	*** 000031	89 46 fe 		mov	WORD PTR [bp-2],ax	;screen
; Line 87
	*** 000034	8b 0e 38 01 		mov	cx,WORD PTR _box_loc
	*** 000038	89 0e 00 00 		mov	WORD PTR _start_row,cx
; Line 88
	*** 00003c	8b 16 3a 01 		mov	dx,WORD PTR _box_loc+2
	*** 000040	89 16 00 00 		mov	WORD PTR _start_col,dx
; Line 89
	*** 000044	8b 1e 3c 01 		mov	bx,WORD PTR _box_loc+4
	*** 000048	89 1e 00 00 		mov	WORD PTR _end_row,bx
; Line 90
	*** 00004c	8b 36 3e 01 		mov	si,WORD PTR _box_loc+6
	*** 000050	89 36 00 00 		mov	WORD PTR _end_col,si
; Line 91
	*** 000054	41 			inc	cx
	*** 000055	89 0e 00 00 		mov	WORD PTR _start_txt,cx
; Line 100
	*** 000059	8d 4e 9a 		lea	cx,WORD PTR [bp-102]	;bios
	*** 00005c	51 			push	cx
	*** 00005d	b9 00 00 		mov	cx,OFFSET DGROUP:_buffer
	*** 000060	51 			push	cx
	*** 000061	b9 00 00 		mov	cx,OFFSET DGROUP:_sav_par
	*** 000064	51 			push	cx
	*** 000065	56 			push	si
	*** 000066	53 			push	bx
	*** 000067	52 			push	dx
	*** 000068	ff 36 38 01 		push	WORD PTR _box_loc
	*** 00006c	50 			push	ax
	*** 00006d	2b c0 			sub	ax,ax
	*** 00006f	89 46 a8 		mov	WORD PTR [bp-88],ax	;page
	*** 000072	50 			push	ax
	*** 000073	e8 00 00 		call	_set_box
	*** 000076	83 c4 12 		add	sp,18
; Line 101
	*** 000079	c7 46 aa 00 00 		mov	WORD PTR [bp-86],0	;i
					$FC406:
; Line 102
; Line 103
	*** 00007e	8d 46 9a 		lea	ax,WORD PTR [bp-102]	;bios
	*** 000081	50 			push	ax
	*** 000082	8b 0e 00 00 		mov	cx,WORD PTR _start_col
	*** 000086	83 c1 04 		add	cx,4
	*** 000089	51 			push	cx
	*** 00008a	8b 0e 00 00 		mov	cx,WORD PTR _start_txt
	*** 00008e	03 4e aa 		add	cx,WORD PTR [bp-86]	;i
	*** 000091	51 			push	cx
	*** 000092	e8 00 00 		call	_set_curs
	*** 000095	83 c4 06 		add	sp,6
; Line 104
	*** 000098	8b 5e aa 		mov	bx,WORD PTR [bp-86]	;i
	*** 00009b	d1 e3 			shl	bx,1
	*** 00009d	ff b7 5c 01 		push	WORD PTR _signon[bx]
	*** 0000a1	b8 0b 01 		mov	ax,OFFSET DGROUP:$SG408
	*** 0000a4	50 			push	ax
	*** 0000a5	8d 46 ac 		lea	ax,WORD PTR [bp-84]	;string
	*** 0000a8	50 			push	ax
	*** 0000a9	e8 00 00 		call	_sprintf
	*** 0000ac	83 c4 06 		add	sp,6
; Line 105
	*** 0000af	8d 46 9a 		lea	ax,WORD PTR [bp-102]	;bios
	*** 0000b2	50 			push	ax
	*** 0000b3	8b 5e a8 		mov	bx,WORD PTR [bp-88]	;page
	*** 0000b6	d1 e3 			shl	bx,1
	*** 0000b8	d1 e3 			shl	bx,1
	*** 0000ba	ff b7 52 01 		push	WORD PTR _attribute[bx+2]
	*** 0000be	8d 46 ac 		lea	ax,WORD PTR [bp-84]	;string
	*** 0000c1	50 			push	ax
	*** 0000c2	e8 00 00 		call	_write_str
	*** 0000c5	83 c4 06 		add	sp,6
; Line 106
	*** 0000c8	ff 46 aa 		inc	WORD PTR [bp-86]	;i
	*** 0000cb	83 7e aa 03 		cmp	WORD PTR [bp-86],3	;i
	*** 0000cf	7c ad 			jl	$FC406
; Line 107
					$L20002:
	*** 0000d1	8b 46 a8 		mov	ax,WORD PTR [bp-88]	;page
	*** 0000d4	a3 00 00 		mov	WORD PTR _last_box,ax
; Line 108
	*** 0000d7	e9 78 04 		jmp	$SB401
; Line 109
; Line 110
					$SC409:
; Line 111
; Line 113
	*** 0000da	a1 54 01 		mov	ax,WORD PTR _attribute+4
	*** 0000dd	0c 20 			or	al,32
	*** 0000df	89 46 fe 		mov	WORD PTR [bp-2],ax	;screen
; Line 114
	*** 0000e2	8b 0e 40 01 		mov	cx,WORD PTR _box_loc+8
	*** 0000e6	89 0e 00 00 		mov	WORD PTR _start_row,cx
; Line 115
	*** 0000ea	8b 16 42 01 		mov	dx,WORD PTR _box_loc+10
	*** 0000ee	89 16 00 00 		mov	WORD PTR _start_col,dx
; Line 116
	*** 0000f2	8b 1e 44 01 		mov	bx,WORD PTR _box_loc+12
	*** 0000f6	89 1e 00 00 		mov	WORD PTR _end_row,bx
; Line 117
	*** 0000fa	8b 36 46 01 		mov	si,WORD PTR _box_loc+14
	*** 0000fe	89 36 00 00 		mov	WORD PTR _end_col,si
; Line 118
	*** 000102	41 			inc	cx
	*** 000103	89 0e 00 00 		mov	WORD PTR _start_txt,cx
; Line 127
	*** 000107	8d 4e 9a 		lea	cx,WORD PTR [bp-102]	;bios
	*** 00010a	51 			push	cx
	*** 00010b	bf 00 00 		mov	di,OFFSET DGROUP:_buffer
	*** 00010e	57 			push	di
	*** 00010f	bf 00 00 		mov	di,OFFSET DGROUP:_sav_par
	*** 000112	57 			push	di
	*** 000113	56 			push	si
	*** 000114	53 			push	bx
	*** 000115	52 			push	dx
	*** 000116	ff 36 40 01 		push	WORD PTR _box_loc+8
	*** 00011a	50 			push	ax
	*** 00011b	b8 01 00 		mov	ax,1
	*** 00011e	89 46 a8 		mov	WORD PTR [bp-88],ax	;page
	*** 000121	50 			push	ax
	*** 000122	e8 00 00 		call	_set_box
	*** 000125	83 c4 12 		add	sp,18
; Line 128
	*** 000128	8d 46 9a 		lea	ax,WORD PTR [bp-102]	;bios
	*** 00012b	50 			push	ax
	*** 00012c	8b 0e 00 00 		mov	cx,WORD PTR _start_col
	*** 000130	83 c1 04 		add	cx,4
	*** 000133	51 			push	cx
	*** 000134	ff 36 00 00 		push	WORD PTR _start_txt
	*** 000138	ff 06 00 00 		inc	WORD PTR _start_txt
	*** 00013c	e8 00 00 		call	_set_curs
	*** 00013f	83 c4 06 		add	sp,6
; Line 129
	*** 000142	8d 46 9a 		lea	ax,WORD PTR [bp-102]	;bios
	*** 000145	50 			push	ax
	*** 000146	ff 36 56 01 		push	WORD PTR _attribute+6
	*** 00014a	ff 36 72 01 		push	WORD PTR _fil_blk
	*** 00014e	e8 00 00 		call	_write_str
	*** 000151	83 c4 06 		add	sp,6
; Line 130
	*** 000154	8d 46 9a 		lea	ax,WORD PTR [bp-102]	;bios
	*** 000157	50 			push	ax
	*** 000158	ff 36 56 01 		push	WORD PTR _attribute+6
	*** 00015c	ff 76 08 		push	WORD PTR [bp+8]	;text
	*** 00015f	e8 00 00 		call	_write_str
	*** 000162	83 c4 06 		add	sp,6
; Line 131
	*** 000165	c7 06 00 00 01 00 	mov	WORD PTR _last_box,1
; Line 132
	*** 00016b	e9 e4 03 		jmp	$SB401
; Line 133
; Line 134
					$SC410:
; Line 135
; Line 136
	*** 00016e	a1 00 00 		mov	ax,WORD PTR _last_box
	*** 000171	89 46 a8 		mov	WORD PTR [bp-88],ax	;page
; Line 137
	*** 000174	8d 46 9a 		lea	ax,WORD PTR [bp-102]	;bios
	*** 000177	50 			push	ax
	*** 000178	8b 0e 00 00 		mov	cx,WORD PTR _start_col
	*** 00017c	83 c1 04 		add	cx,4
	*** 00017f	51 			push	cx
	*** 000180	ff 36 00 00 		push	WORD PTR _start_txt
	*** 000184	ff 06 00 00 		inc	WORD PTR _start_txt
	*** 000188	e8 00 00 		call	_set_curs
	*** 00018b	83 c4 06 		add	sp,6
; Line 138
	*** 00018e	8d 46 9a 		lea	ax,WORD PTR [bp-102]	;bios
	*** 000191	50 			push	ax
	*** 000192	8b 5e a8 		mov	bx,WORD PTR [bp-88]	;page
	*** 000195	d1 e3 			shl	bx,1
	*** 000197	d1 e3 			shl	bx,1
	*** 000199	ff b7 52 01 		push	WORD PTR _attribute[bx+2]
	*** 00019d	ff 36 74 01 		push	WORD PTR _fil_blk+2
					$L20003:
	*** 0001a1	e8 00 00 		call	_write_str
	*** 0001a4	83 c4 06 		add	sp,6
; Line 139
	*** 0001a7	e9 a8 03 		jmp	$SB401
; Line 140
; Line 141
					$SC411:
; Line 142
; Line 143
	*** 0001aa	a1 00 00 		mov	ax,WORD PTR _last_box
	*** 0001ad	89 46 a8 		mov	WORD PTR [bp-88],ax	;page
; Line 144
	*** 0001b0	8d 46 9a 		lea	ax,WORD PTR [bp-102]	;bios
	*** 0001b3	50 			push	ax
	*** 0001b4	8b 0e 00 00 		mov	cx,WORD PTR _start_col
	*** 0001b8	83 c1 04 		add	cx,4
	*** 0001bb	51 			push	cx
	*** 0001bc	ff 36 00 00 		push	WORD PTR _start_txt
	*** 0001c0	ff 06 00 00 		inc	WORD PTR _start_txt
	*** 0001c4	e8 00 00 		call	_set_curs
	*** 0001c7	83 c4 06 		add	sp,6
; Line 145
	*** 0001ca	8d 46 9a 		lea	ax,WORD PTR [bp-102]	;bios
	*** 0001cd	50 			push	ax
	*** 0001ce	8b 5e a8 		mov	bx,WORD PTR [bp-88]	;page
	*** 0001d1	d1 e3 			shl	bx,1
	*** 0001d3	d1 e3 			shl	bx,1
	*** 0001d5	ff b7 52 01 		push	WORD PTR _attribute[bx+2]
	*** 0001d9	ff 36 76 01 		push	WORD PTR _fil_blk+4
	*** 0001dd	8b f3 			mov	si,bx
	*** 0001df	e8 00 00 		call	_write_str
	*** 0001e2	83 c4 06 		add	sp,6
; Line 146
	*** 0001e5	83 7e 06 00 		cmp	WORD PTR [bp+6],0	;sys
	*** 0001e9	75 03 			jne	$JCC489
	*** 0001eb	e9 64 03 		jmp	$SB401
					$JCC489:
; Line 147
; Line 148
	*** 0001ee	8b 5e 06 		mov	bx,WORD PTR [bp+6]	;sys
	*** 0001f1	ff 77 06 		push	WORD PTR [bx+6]
	*** 0001f4	ff 77 04 		push	WORD PTR [bx+4]
	*** 0001f7	b8 0e 01 		mov	ax,OFFSET DGROUP:$SG413
	*** 0001fa	50 			push	ax
	*** 0001fb	8d 46 ac 		lea	ax,WORD PTR [bp-84]	;string
	*** 0001fe	50 			push	ax
	*** 0001ff	e8 00 00 		call	_sprintf
	*** 000202	83 c4 08 		add	sp,8
; Line 149
	*** 000205	8d 46 9a 		lea	ax,WORD PTR [bp-102]	;bios
	*** 000208	50 			push	ax
	*** 000209	8b 0e 00 00 		mov	cx,WORD PTR _start_col
	*** 00020d	83 c1 26 		add	cx,38
	*** 000210	51 			push	cx
	*** 000211	8b 0e 00 00 		mov	cx,WORD PTR _start_txt
	*** 000215	49 			dec	cx
					$L20005:
	*** 000216	51 			push	cx
	*** 000217	e8 00 00 		call	_set_curs
	*** 00021a	83 c4 06 		add	sp,6
; Line 150
	*** 00021d	8d 46 9a 		lea	ax,WORD PTR [bp-102]	;bios
	*** 000220	50 			push	ax
	*** 000221	ff b4 52 01 		push	WORD PTR _attribute[si+2]
	*** 000225	8d 46 ac 		lea	ax,WORD PTR [bp-84]	;string
	*** 000228	50 			push	ax
	*** 000229	e9 75 ff 		jmp	$L20003
; Line 153
; Line 154
					$SC414:
; Line 155
; Line 157
	*** 00022c	a1 58 01 		mov	ax,WORD PTR _attribute+8
	*** 00022f	0c 20 			or	al,32
	*** 000231	89 46 fe 		mov	WORD PTR [bp-2],ax	;screen
; Line 158
	*** 000234	8b 0e 48 01 		mov	cx,WORD PTR _box_loc+16
	*** 000238	89 0e 00 00 		mov	WORD PTR _start_row,cx
; Line 159
	*** 00023c	8b 16 4a 01 		mov	dx,WORD PTR _box_loc+18
	*** 000240	89 16 00 00 		mov	WORD PTR _start_col,dx
; Line 160
	*** 000244	8b 1e 4c 01 		mov	bx,WORD PTR _box_loc+20
	*** 000248	89 1e 00 00 		mov	WORD PTR _end_row,bx
; Line 161
	*** 00024c	8b 36 4e 01 		mov	si,WORD PTR _box_loc+22
	*** 000250	89 36 00 00 		mov	WORD PTR _end_col,si
; Line 162
	*** 000254	41 			inc	cx
	*** 000255	89 0e 00 00 		mov	WORD PTR _start_txt,cx
; Line 171
	*** 000259	8d 4e 9a 		lea	cx,WORD PTR [bp-102]	;bios
	*** 00025c	51 			push	cx
	*** 00025d	b9 00 00 		mov	cx,OFFSET DGROUP:_buffer
	*** 000260	51 			push	cx
	*** 000261	b9 00 00 		mov	cx,OFFSET DGROUP:_sav_par
	*** 000264	51 			push	cx
	*** 000265	56 			push	si
	*** 000266	53 			push	bx
	*** 000267	52 			push	dx
	*** 000268	ff 36 48 01 		push	WORD PTR _box_loc+16
	*** 00026c	50 			push	ax
	*** 00026d	b8 02 00 		mov	ax,2
	*** 000270	89 46 a8 		mov	WORD PTR [bp-88],ax	;page
	*** 000273	50 			push	ax
	*** 000274	e8 00 00 		call	_set_box
	*** 000277	83 c4 12 		add	sp,18
; Line 173
	*** 00027a	c7 46 aa 00 00 		mov	WORD PTR [bp-86],0	;i
	*** 00027f	eb 04 			jmp	SHORT $F415
	*** 000281	90 			nop	
					$FC416:
	*** 000282	ff 46 aa 		inc	WORD PTR [bp-86]	;i
					$F415:
	*** 000285	83 7e aa 06 		cmp	WORD PTR [bp-86],6	;i
	*** 000289	7c 03 			jl	$JCC649
	*** 00028b	e9 43 fe 		jmp	$L20002
					$JCC649:
; Line 174
; Line 175
	*** 00028e	8d 46 9a 		lea	ax,WORD PTR [bp-102]	;bios
	*** 000291	50 			push	ax
	*** 000292	8b 0e 00 00 		mov	cx,WORD PTR _start_col
	*** 000296	83 c1 04 		add	cx,4
	*** 000299	51 			push	cx
	*** 00029a	8b 0e 00 00 		mov	cx,WORD PTR _start_txt
	*** 00029e	03 4e aa 		add	cx,WORD PTR [bp-86]	;i
	*** 0002a1	51 			push	cx
	*** 0002a2	e8 00 00 		call	_set_curs
	*** 0002a5	83 c4 06 		add	sp,6
; Line 176
	*** 0002a8	8d 46 9a 		lea	ax,WORD PTR [bp-102]	;bios
	*** 0002ab	50 			push	ax
	*** 0002ac	8b 5e a8 		mov	bx,WORD PTR [bp-88]	;page
	*** 0002af	d1 e3 			shl	bx,1
	*** 0002b1	d1 e3 			shl	bx,1
	*** 0002b3	ff b7 52 01 		push	WORD PTR _attribute[bx+2]
	*** 0002b7	8b 5e aa 		mov	bx,WORD PTR [bp-86]	;i
	*** 0002ba	d1 e3 			shl	bx,1
	*** 0002bc	ff b7 62 01 		push	WORD PTR _sta_blk[bx]
	*** 0002c0	e8 00 00 		call	_write_str
	*** 0002c3	83 c4 06 		add	sp,6
; Line 177
	*** 0002c6	eb ba 			jmp	SHORT $FC416
					$SC418:
; Line 182
; Line 183
	*** 0002c8	a1 00 00 		mov	ax,WORD PTR _last_box
	*** 0002cb	89 46 a8 		mov	WORD PTR [bp-88],ax	;page
; Line 184
	*** 0002ce	8d 46 9a 		lea	ax,WORD PTR [bp-102]	;bios
	*** 0002d1	50 			push	ax
	*** 0002d2	8b 0e 00 00 		mov	cx,WORD PTR _start_col
	*** 0002d6	83 c1 04 		add	cx,4
	*** 0002d9	51 			push	cx
	*** 0002da	ff 36 00 00 		push	WORD PTR _start_txt
	*** 0002de	ff 06 00 00 		inc	WORD PTR _start_txt
	*** 0002e2	e8 00 00 		call	_set_curs
	*** 0002e5	83 c4 06 		add	sp,6
; Line 185
	*** 0002e8	8d 46 9a 		lea	ax,WORD PTR [bp-102]	;bios
	*** 0002eb	50 			push	ax
	*** 0002ec	8b 5e a8 		mov	bx,WORD PTR [bp-88]	;page
	*** 0002ef	d1 e3 			shl	bx,1
	*** 0002f1	d1 e3 			shl	bx,1
	*** 0002f3	ff b7 52 01 		push	WORD PTR _attribute[bx+2]
	*** 0002f7	ff 36 78 01 		push	WORD PTR _fil_blk+6
	*** 0002fb	8b f3 			mov	si,bx
	*** 0002fd	e8 00 00 		call	_write_str
	*** 000300	83 c4 06 		add	sp,6
; Line 186
	*** 000303	8d 46 9a 		lea	ax,WORD PTR [bp-102]	;bios
	*** 000306	50 			push	ax
	*** 000307	ff b4 52 01 		push	WORD PTR _attribute[si+2]
	*** 00030b	ff 76 08 		push	WORD PTR [bp+8]	;text
	*** 00030e	e9 90 fe 		jmp	$L20003
; Line 188
	*** 000311	90 			nop	
; Line 189
					$SC419:
; Line 190
; Line 191
	*** 000312	a1 00 00 		mov	ax,WORD PTR _last_box
	*** 000315	89 46 a8 		mov	WORD PTR [bp-88],ax	;page
; Line 192
	*** 000318	8d 46 9a 		lea	ax,WORD PTR [bp-102]	;bios
	*** 00031b	50 			push	ax
	*** 00031c	8b 0e 00 00 		mov	cx,WORD PTR _start_col
	*** 000320	83 c1 04 		add	cx,4
	*** 000323	51 			push	cx
	*** 000324	ff 36 00 00 		push	WORD PTR _start_txt
	*** 000328	ff 06 00 00 		inc	WORD PTR _start_txt
	*** 00032c	e8 00 00 		call	_set_curs
	*** 00032f	83 c4 06 		add	sp,6
; Line 193
	*** 000332	8d 46 9a 		lea	ax,WORD PTR [bp-102]	;bios
	*** 000335	50 			push	ax
	*** 000336	8b 5e a8 		mov	bx,WORD PTR [bp-88]	;page
	*** 000339	d1 e3 			shl	bx,1
	*** 00033b	d1 e3 			shl	bx,1
	*** 00033d	ff b7 52 01 		push	WORD PTR _attribute[bx+2]
	*** 000341	ff 36 7a 01 		push	WORD PTR _fil_blk+8
	*** 000345	e9 59 fe 		jmp	$L20003
; Line 195
; Line 196
					$SC420:
; Line 197
; Line 198
	*** 000348	a1 00 00 		mov	ax,WORD PTR _last_box
	*** 00034b	89 46 a8 		mov	WORD PTR [bp-88],ax	;page
; Line 199
	*** 00034e	a1 00 00 		mov	ax,WORD PTR _start_row
	*** 000351	40 			inc	ax
	*** 000352	a3 00 00 		mov	WORD PTR _start_txt,ax
; Line 200
	*** 000355	8d 4e 9a 		lea	cx,WORD PTR [bp-102]	;bios
	*** 000358	51 			push	cx
	*** 000359	8b 16 00 00 		mov	dx,WORD PTR _start_col
	*** 00035d	83 c2 04 		add	dx,4
	*** 000360	52 			push	dx
	*** 000361	05 05 00 		add	ax,5
	*** 000364	50 			push	ax
	*** 000365	e8 00 00 		call	_set_curs
	*** 000368	83 c4 06 		add	sp,6
; Line 201
	*** 00036b	8d 46 9a 		lea	ax,WORD PTR [bp-102]	;bios
	*** 00036e	50 			push	ax
	*** 00036f	8b 5e a8 		mov	bx,WORD PTR [bp-88]	;page
	*** 000372	d1 e3 			shl	bx,1
	*** 000374	d1 e3 			shl	bx,1
	*** 000376	8b 87 52 01 		mov	ax,WORD PTR _attribute[bx+2]
	*** 00037a	80 cc 80 		or	ah,128
	*** 00037d	50 			push	ax
	*** 00037e	ff 36 6e 01 		push	WORD PTR _sta_blk+12
	*** 000382	e9 1c fe 		jmp	$L20003
; Line 203
	*** 000385	90 			nop	
; Line 204
					$SC421:
; Line 205
; Line 206
	*** 000386	a1 00 00 		mov	ax,WORD PTR _last_box
	*** 000389	89 46 a8 		mov	WORD PTR [bp-88],ax	;page
; Line 207
	*** 00038c	a1 00 00 		mov	ax,WORD PTR _start_row
	*** 00038f	40 			inc	ax
	*** 000390	a3 00 00 		mov	WORD PTR _start_txt,ax
; Line 208
	*** 000393	8d 4e 9a 		lea	cx,WORD PTR [bp-102]	;bios
	*** 000396	51 			push	cx
	*** 000397	8b 16 00 00 		mov	dx,WORD PTR _start_col
	*** 00039b	83 c2 04 		add	dx,4
	*** 00039e	52 			push	dx
	*** 00039f	05 05 00 		add	ax,5
	*** 0003a2	50 			push	ax
	*** 0003a3	e8 00 00 		call	_set_curs
	*** 0003a6	83 c4 06 		add	sp,6
; Line 209
	*** 0003a9	8d 46 9a 		lea	ax,WORD PTR [bp-102]	;bios
	*** 0003ac	50 			push	ax
	*** 0003ad	8b 5e a8 		mov	bx,WORD PTR [bp-88]	;page
	*** 0003b0	d1 e3 			shl	bx,1
	*** 0003b2	d1 e3 			shl	bx,1
	*** 0003b4	8b 87 52 01 		mov	ax,WORD PTR _attribute[bx+2]
	*** 0003b8	80 cc 80 		or	ah,128
	*** 0003bb	50 			push	ax
	*** 0003bc	ff 36 70 01 		push	WORD PTR _sta_blk+14
	*** 0003c0	e9 de fd 		jmp	$L20003
; Line 211
	*** 0003c3	90 			nop	
; Line 212
					$SC422:
; Line 213
; Line 214
	*** 0003c4	a1 00 00 		mov	ax,WORD PTR _last_box
	*** 0003c7	89 46 a8 		mov	WORD PTR [bp-88],ax	;page
; Line 215
	*** 0003ca	8b 5e 06 		mov	bx,WORD PTR [bp+6]	;sys
	*** 0003cd	ff 37 			push	WORD PTR [bx]
	*** 0003cf	b8 20 01 		mov	ax,OFFSET DGROUP:$SG423
	*** 0003d2	50 			push	ax
	*** 0003d3	8d 46 ac 		lea	ax,WORD PTR [bp-84]	;string
	*** 0003d6	50 			push	ax
	*** 0003d7	e8 00 00 		call	_sprintf
	*** 0003da	83 c4 06 		add	sp,6
; Line 216
	*** 0003dd	8d 46 9a 		lea	ax,WORD PTR [bp-102]	;bios
	*** 0003e0	50 			push	ax
	*** 0003e1	8b 0e 00 00 		mov	cx,WORD PTR _start_col
	*** 0003e5	83 c1 0f 		add	cx,15
	*** 0003e8	51 			push	cx
	*** 0003e9	ff 36 00 00 		push	WORD PTR _start_txt
	*** 0003ed	e8 00 00 		call	_set_curs
	*** 0003f0	83 c4 06 		add	sp,6
; Line 217
	*** 0003f3	8d 46 9a 		lea	ax,WORD PTR [bp-102]	;bios
	*** 0003f6	50 			push	ax
	*** 0003f7	8b 5e a8 		mov	bx,WORD PTR [bp-88]	;page
	*** 0003fa	d1 e3 			shl	bx,1
	*** 0003fc	d1 e3 			shl	bx,1
	*** 0003fe	ff b7 52 01 		push	WORD PTR _attribute[bx+2]
	*** 000402	8d 4e ac 		lea	cx,WORD PTR [bp-84]	;string
	*** 000405	51 			push	cx
	*** 000406	8b f3 			mov	si,bx
	*** 000408	e8 00 00 		call	_write_str
	*** 00040b	83 c4 06 		add	sp,6
; Line 219
	*** 00040e	8b 5e 06 		mov	bx,WORD PTR [bp+6]	;sys
	*** 000411	ff 77 02 		push	WORD PTR [bx+2]
	*** 000414	b8 25 01 		mov	ax,OFFSET DGROUP:$SG424
	*** 000417	50 			push	ax
	*** 000418	8d 46 ac 		lea	ax,WORD PTR [bp-84]	;string
	*** 00041b	50 			push	ax
	*** 00041c	e8 00 00 		call	_sprintf
	*** 00041f	83 c4 06 		add	sp,6
; Line 220
	*** 000422	8d 46 9a 		lea	ax,WORD PTR [bp-102]	;bios
	*** 000425	50 			push	ax
	*** 000426	8b 0e 00 00 		mov	cx,WORD PTR _start_col
	*** 00042a	83 c1 0f 		add	cx,15
	*** 00042d	51 			push	cx
	*** 00042e	8b 0e 00 00 		mov	cx,WORD PTR _start_txt
	*** 000432	41 			inc	cx
	*** 000433	51 			push	cx
	*** 000434	e8 00 00 		call	_set_curs
	*** 000437	83 c4 06 		add	sp,6
; Line 221
	*** 00043a	8d 46 9a 		lea	ax,WORD PTR [bp-102]	;bios
	*** 00043d	50 			push	ax
	*** 00043e	ff b4 52 01 		push	WORD PTR _attribute[si+2]
	*** 000442	8d 4e ac 		lea	cx,WORD PTR [bp-84]	;string
	*** 000445	51 			push	cx
	*** 000446	e8 00 00 		call	_write_str
	*** 000449	83 c4 06 		add	sp,6
; Line 223
	*** 00044c	8b 5e 06 		mov	bx,WORD PTR [bp+6]	;sys
	*** 00044f	ff 77 06 		push	WORD PTR [bx+6]
	*** 000452	ff 77 04 		push	WORD PTR [bx+4]
	*** 000455	b8 2a 01 		mov	ax,OFFSET DGROUP:$SG425
	*** 000458	50 			push	ax
	*** 000459	8d 46 ac 		lea	ax,WORD PTR [bp-84]	;string
	*** 00045c	50 			push	ax
	*** 00045d	e8 00 00 		call	_sprintf
	*** 000460	83 c4 08 		add	sp,8
; Line 224
	*** 000463	8d 46 9a 		lea	ax,WORD PTR [bp-102]	;bios
	*** 000466	50 			push	ax
	*** 000467	8b 0e 00 00 		mov	cx,WORD PTR _start_col
	*** 00046b	83 c1 0f 		add	cx,15
	*** 00046e	51 			push	cx
	*** 00046f	8b 0e 00 00 		mov	cx,WORD PTR _start_txt
	*** 000473	41 			inc	cx
	*** 000474	41 			inc	cx
	*** 000475	51 			push	cx
	*** 000476	e8 00 00 		call	_set_curs
	*** 000479	83 c4 06 		add	sp,6
; Line 225
	*** 00047c	8d 46 9a 		lea	ax,WORD PTR [bp-102]	;bios
	*** 00047f	50 			push	ax
	*** 000480	ff b4 52 01 		push	WORD PTR _attribute[si+2]
	*** 000484	8d 4e ac 		lea	cx,WORD PTR [bp-84]	;string
	*** 000487	51 			push	cx
	*** 000488	e8 00 00 		call	_write_str
	*** 00048b	83 c4 06 		add	sp,6
; Line 227
	*** 00048e	8b 5e 06 		mov	bx,WORD PTR [bp+6]	;sys
	*** 000491	ff 77 08 		push	WORD PTR [bx+8]
	*** 000494	b8 30 01 		mov	ax,OFFSET DGROUP:$SG426
	*** 000497	50 			push	ax
	*** 000498	8d 46 ac 		lea	ax,WORD PTR [bp-84]	;string
	*** 00049b	50 			push	ax
	*** 00049c	e8 00 00 		call	_sprintf
	*** 00049f	83 c4 06 		add	sp,6
; Line 228
	*** 0004a2	8d 46 9a 		lea	ax,WORD PTR [bp-102]	;bios
	*** 0004a5	50 			push	ax
	*** 0004a6	8b 0e 00 00 		mov	cx,WORD PTR _start_col
	*** 0004aa	83 c1 0f 		add	cx,15
	*** 0004ad	51 			push	cx
	*** 0004ae	8b 0e 00 00 		mov	cx,WORD PTR _start_txt
	*** 0004b2	83 c1 03 		add	cx,3
	*** 0004b5	51 			push	cx
	*** 0004b6	e8 00 00 		call	_set_curs
	*** 0004b9	83 c4 06 		add	sp,6
; Line 229
	*** 0004bc	8d 46 9a 		lea	ax,WORD PTR [bp-102]	;bios
	*** 0004bf	50 			push	ax
	*** 0004c0	ff b4 52 01 		push	WORD PTR _attribute[si+2]
	*** 0004c4	8d 4e ac 		lea	cx,WORD PTR [bp-84]	;string
	*** 0004c7	51 			push	cx
	*** 0004c8	e8 00 00 		call	_write_str
	*** 0004cb	83 c4 06 		add	sp,6
; Line 231
	*** 0004ce	8b 5e 06 		mov	bx,WORD PTR [bp+6]	;sys
	*** 0004d1	ff 77 0a 		push	WORD PTR [bx+10]
	*** 0004d4	b8 35 01 		mov	ax,OFFSET DGROUP:$SG427
	*** 0004d7	50 			push	ax
	*** 0004d8	8d 46 ac 		lea	ax,WORD PTR [bp-84]	;string
	*** 0004db	50 			push	ax
	*** 0004dc	e8 00 00 		call	_sprintf
	*** 0004df	83 c4 06 		add	sp,6
; Line 232
	*** 0004e2	8d 46 9a 		lea	ax,WORD PTR [bp-102]	;bios
	*** 0004e5	50 			push	ax
	*** 0004e6	8b 0e 00 00 		mov	cx,WORD PTR _start_col
	*** 0004ea	83 c1 0f 		add	cx,15
	*** 0004ed	51 			push	cx
	*** 0004ee	8b 0e 00 00 		mov	cx,WORD PTR _start_txt
	*** 0004f2	83 c1 04 		add	cx,4
	*** 0004f5	e9 1e fd 		jmp	$L20005
; Line 235
; Line 236
					$SC428:
; Line 237
; Line 238
	*** 0004f8	a1 00 00 		mov	ax,WORD PTR _last_box
	*** 0004fb	89 46 a8 		mov	WORD PTR [bp-88],ax	;page
	*** 0004fe	eb 18 			jmp	SHORT $F429
					$FC430:
; Line 239
; Line 240
	*** 000500	8d 46 9a 		lea	ax,WORD PTR [bp-102]	;bios
	*** 000503	50 			push	ax
	*** 000504	b8 00 00 		mov	ax,OFFSET DGROUP:_buffer
	*** 000507	50 			push	ax
	*** 000508	b8 00 00 		mov	ax,OFFSET DGROUP:_sav_par
	*** 00050b	50 			push	ax
	*** 00050c	ff 76 a8 		push	WORD PTR [bp-88]	;page
	*** 00050f	e8 00 00 		call	_end_box
	*** 000512	83 c4 08 		add	sp,8
; Line 241
	*** 000515	ff 4e a8 		dec	WORD PTR [bp-88]	;page
					$F429:
	*** 000518	83 7e a8 00 		cmp	WORD PTR [bp-88],0	;page
	*** 00051c	7d e2 			jge	$FC430
; Line 242
	*** 00051e	8d 46 9a 		lea	ax,WORD PTR [bp-102]	;bios
	*** 000521	50 			push	ax
	*** 000522	e8 00 00 		call	_restore_curs
	*** 000525	83 c4 02 		add	sp,2
; Line 243
	*** 000528	eb 28 			jmp	SHORT $SB401
					$S400:
	*** 00052a	48 			dec	ax
	*** 00052b	3d 0c 00 		cmp	ax,12
	*** 00052e	77 22 			ja	$SB401
	*** 000530	d1 e0 			shl	ax,1
	*** 000532	93 			xchg	ax,bx
	*** 000533	2e ff a7 38 05 		jmp	WORD PTR cs:$L20000[bx]
					$L20000:
	*** 000538	22 00 				DW	$SC404
	*** 00053a	52 05 				DW	$SB401
	*** 00053c	52 05 				DW	$SB401
	*** 00053e	2c 02 				DW	$SC414
	*** 000540	da 00 				DW	$SC409
	*** 000542	aa 01 				DW	$SC411
	*** 000544	6e 01 				DW	$SC410
	*** 000546	12 03 				DW	$SC419
	*** 000548	c8 02 				DW	$SC418
	*** 00054a	c4 03 				DW	$SC422
	*** 00054c	86 03 				DW	$SC421
	*** 00054e	48 03 				DW	$SC420
	*** 000550	f8 04 				DW	$SC428
					$SB401:
; Line 246
	*** 000552	2b c0 			sub	ax,ax
; Line 247
	*** 000554	5e 			pop	si
	*** 000555	5f 			pop	di
	*** 000556	8b e5 			mov	sp,bp
	*** 000558	5d 			pop	bp
	*** 000559	c3 			ret	

_screen	ENDP
; Line 263
	PUBLIC	_set_box
_set_box	PROC NEAR
	*** 00055a	55 			push	bp
	*** 00055b	8b ec 			mov	bp,sp
	*** 00055d	83 ec 0a 		sub	sp,10
	*** 000560	57 			push	di
	*** 000561	56 			push	si
;	putscr = -4
;	sav_col = -6
;	sav_row = -2
;	row = -8
;	col = -10
;	bios = 20
;	buffer = 18
;	sav_par = 16
;	end_col = 14
;	end_row = 12
;	start_col = 10
;	start_row = 8
;	screen = 6
;	page = 4
; Line 278
	*** 000562	ff 76 14 		push	WORD PTR [bp+20]	;bios
	*** 000565	e8 00 00 		call	_get_curs
	*** 000568	83 c4 02 		add	sp,2
; Line 279
	*** 00056b	8b 5e 14 		mov	bx,WORD PTR [bp+20]	;bios
	*** 00056e	8a 47 07 		mov	al,BYTE PTR [bx+7]
	*** 000571	2a e4 			sub	ah,ah
	*** 000573	89 46 fe 		mov	WORD PTR [bp-2],ax	;sav_row
; Line 280
	*** 000576	8a 47 06 		mov	al,BYTE PTR [bx+6]
	*** 000579	89 46 fa 		mov	WORD PTR [bp-6],ax	;sav_col
; Line 281
	*** 00057c	8b 46 06 		mov	ax,WORD PTR [bp+6]	;screen
	*** 00057f	8b 5e 04 		mov	bx,WORD PTR [bp+4]	;page
	*** 000582	8b cb 			mov	cx,bx
	*** 000584	d1 e3 			shl	bx,1
	*** 000586	03 d9 			add	bx,cx
	*** 000588	d1 e3 			shl	bx,1
	*** 00058a	03 d9 			add	bx,cx
	*** 00058c	d1 e3 			shl	bx,1
	*** 00058e	8b 76 10 		mov	si,WORD PTR [bp+16]	;sav_par
	*** 000591	89 00 			mov	WORD PTR [bx][si],ax
; Line 282
	*** 000593	8b 46 08 		mov	ax,WORD PTR [bp+8]	;start_row
	*** 000596	03 f3 			add	si,bx
	*** 000598	89 44 02 		mov	WORD PTR [si+2],ax
; Line 283
	*** 00059b	8b 4e 0a 		mov	cx,WORD PTR [bp+10]	;start_col
	*** 00059e	89 4c 04 		mov	WORD PTR [si+4],cx
; Line 284
	*** 0005a1	8b 56 0c 		mov	dx,WORD PTR [bp+12]	;end_row
	*** 0005a4	89 54 06 		mov	WORD PTR [si+6],dx
; Line 285
	*** 0005a7	8b 5e 0e 		mov	bx,WORD PTR [bp+14]	;end_col
	*** 0005aa	89 5c 08 		mov	WORD PTR [si+8],bx
; Line 286
	*** 0005ad	8b 7e fe 		mov	di,WORD PTR [bp-2]	;sav_row
	*** 0005b0	89 7c 0a 		mov	WORD PTR [si+10],di
; Line 287
	*** 0005b3	8b 7e fa 		mov	di,WORD PTR [bp-6]	;sav_col
	*** 0005b6	89 7c 0c 		mov	WORD PTR [si+12],di
; Line 292
	*** 0005b9	8b f0 			mov	si,ax
	*** 0005bb	8b c2 			mov	ax,dx
	*** 0005bd	2b c6 			sub	ax,si
	*** 0005bf	2b d9 			sub	bx,cx
	*** 0005c1	f7 eb 			imul	bx
	*** 0005c3	d1 e0 			shl	ax,1
	*** 0005c5	50 			push	ax
	*** 0005c6	e8 00 00 		call	_malloc
	*** 0005c9	83 c4 02 		add	sp,2
	*** 0005cc	8b 5e 04 		mov	bx,WORD PTR [bp+4]	;page
	*** 0005cf	d1 e3 			shl	bx,1
	*** 0005d1	8b 76 12 		mov	si,WORD PTR [bp+18]	;buffer
	*** 0005d4	89 00 			mov	WORD PTR [bx][si],ax
; Line 294
	*** 0005d6	0b c0 			or	ax,ax
	*** 0005d8	75 14 			jne	$I447
; Line 295
; Line 296
	*** 0005da	b8 7c 01 		mov	ax,OFFSET DGROUP:$SG448
	*** 0005dd	50 			push	ax
	*** 0005de	e8 00 00 		call	_puts
	*** 0005e1	83 c4 02 		add	sp,2
; Line 297
	*** 0005e4	b8 01 00 		mov	ax,1
	*** 0005e7	5e 			pop	si
	*** 0005e8	5f 			pop	di
	*** 0005e9	8b e5 			mov	sp,bp
	*** 0005eb	5d 			pop	bp
	*** 0005ec	c3 			ret	
; Line 298
	*** 0005ed	90 			nop	
; Line 299
					$I447:
	*** 0005ee	8b 46 08 		mov	ax,WORD PTR [bp+8]	;start_row
	*** 0005f1	89 46 f8 		mov	WORD PTR [bp-8],ax	;row
	*** 0005f4	e9 ec 00 		jmp	$F449
	*** 0005f7	90 			nop	
					$FC453:
	*** 0005f8	ff 46 f6 		inc	WORD PTR [bp-10]	;col
					$F452:
	*** 0005fb	8b 46 f6 		mov	ax,WORD PTR [bp-10]	;col
	*** 0005fe	39 46 0e 		cmp	WORD PTR [bp+14],ax	;end_col
	*** 000601	7f 03 			jg	$JCC1537
	*** 000603	e9 da 00 		jmp	$FC450
					$JCC1537:
; Line 302
; Line 303
	*** 000606	ff 76 14 		push	WORD PTR [bp+20]	;bios
	*** 000609	50 			push	ax
	*** 00060a	ff 76 f8 		push	WORD PTR [bp-8]	;row
	*** 00060d	e8 00 00 		call	_set_curs
	*** 000610	83 c4 06 		add	sp,6
; Line 304
	*** 000613	ff 76 14 		push	WORD PTR [bp+20]	;bios
	*** 000616	e8 00 00 		call	_get_char_atr
	*** 000619	83 c4 02 		add	sp,2
	*** 00061c	8b 5e 04 		mov	bx,WORD PTR [bp+4]	;page
	*** 00061f	d1 e3 			shl	bx,1
	*** 000621	8b 76 12 		mov	si,WORD PTR [bp+18]	;buffer
	*** 000624	8b 38 			mov	di,WORD PTR [bx][si]
	*** 000626	89 05 			mov	WORD PTR [di],ax
; Line 305
	*** 000628	83 00 02 		add	WORD PTR [bx][si],2
; Line 306
	*** 00062b	8b 46 06 		mov	ax,WORD PTR [bp+6]	;screen
	*** 00062e	89 46 fc 		mov	WORD PTR [bp-4],ax	;putscr
; Line 307
	*** 000631	8b 46 f8 		mov	ax,WORD PTR [bp-8]	;row
	*** 000634	39 46 08 		cmp	WORD PTR [bp+8],ax	;start_row
	*** 000637	74 08 			je	$I456
	*** 000639	2b 46 0c 		sub	ax,WORD PTR [bp+12]	;end_row
	*** 00063c	f7 d8 			neg	ax
	*** 00063e	48 			dec	ax
	*** 00063f	75 0a 			jne	$I455
					$I456:
; Line 308
	*** 000641	8b 46 06 		mov	ax,WORD PTR [bp+6]	;screen
	*** 000644	24 cd 			and	al,205
	*** 000646	0c cd 			or	al,205
	*** 000648	89 46 fc 		mov	WORD PTR [bp-4],ax	;putscr
; Line 309
					$I455:
	*** 00064b	8b 46 f6 		mov	ax,WORD PTR [bp-10]	;col
	*** 00064e	39 46 0a 		cmp	WORD PTR [bp+10],ax	;start_col
	*** 000651	74 08 			je	$I458
	*** 000653	2b 46 0e 		sub	ax,WORD PTR [bp+14]	;end_col
	*** 000656	f7 d8 			neg	ax
	*** 000658	48 			dec	ax
	*** 000659	75 0a 			jne	$I457
					$I458:
; Line 310
	*** 00065b	8b 46 06 		mov	ax,WORD PTR [bp+6]	;screen
	*** 00065e	24 ba 			and	al,186
	*** 000660	0c ba 			or	al,186
	*** 000662	89 46 fc 		mov	WORD PTR [bp-4],ax	;putscr
; Line 311
					$I457:
	*** 000665	8b 46 f8 		mov	ax,WORD PTR [bp-8]	;row
	*** 000668	39 46 08 		cmp	WORD PTR [bp+8],ax	;start_row
	*** 00066b	75 12 			jne	$I459
	*** 00066d	8b 46 f6 		mov	ax,WORD PTR [bp-10]	;col
	*** 000670	39 46 0a 		cmp	WORD PTR [bp+10],ax	;start_col
	*** 000673	75 0a 			jne	$I459
; Line 312
	*** 000675	8b 46 06 		mov	ax,WORD PTR [bp+6]	;screen
	*** 000678	24 c9 			and	al,201
	*** 00067a	0c c9 			or	al,201
	*** 00067c	89 46 fc 		mov	WORD PTR [bp-4],ax	;putscr
; Line 313
					$I459:
	*** 00067f	8b 46 f8 		mov	ax,WORD PTR [bp-8]	;row
	*** 000682	39 46 08 		cmp	WORD PTR [bp+8],ax	;start_row
	*** 000685	75 13 			jne	$I460
	*** 000687	8b 46 0e 		mov	ax,WORD PTR [bp+14]	;end_col
	*** 00068a	2b 46 f6 		sub	ax,WORD PTR [bp-10]	;col
	*** 00068d	48 			dec	ax
	*** 00068e	75 0a 			jne	$I460
; Line 314
	*** 000690	8b 46 06 		mov	ax,WORD PTR [bp+6]	;screen
	*** 000693	24 bb 			and	al,187
	*** 000695	0c bb 			or	al,187
	*** 000697	89 46 fc 		mov	WORD PTR [bp-4],ax	;putscr
; Line 315
					$I460:
	*** 00069a	8b 46 0c 		mov	ax,WORD PTR [bp+12]	;end_row
	*** 00069d	2b 46 f8 		sub	ax,WORD PTR [bp-8]	;row
	*** 0006a0	48 			dec	ax
	*** 0006a1	75 12 			jne	$I461
	*** 0006a3	8b 46 f6 		mov	ax,WORD PTR [bp-10]	;col
	*** 0006a6	39 46 0a 		cmp	WORD PTR [bp+10],ax	;start_col
	*** 0006a9	75 0a 			jne	$I461
; Line 316
	*** 0006ab	8b 46 06 		mov	ax,WORD PTR [bp+6]	;screen
	*** 0006ae	24 c8 			and	al,200
	*** 0006b0	0c c8 			or	al,200
	*** 0006b2	89 46 fc 		mov	WORD PTR [bp-4],ax	;putscr
; Line 317
					$I461:
	*** 0006b5	8b 46 0c 		mov	ax,WORD PTR [bp+12]	;end_row
	*** 0006b8	2b 46 f8 		sub	ax,WORD PTR [bp-8]	;row
	*** 0006bb	48 			dec	ax
	*** 0006bc	75 13 			jne	$I462
	*** 0006be	8b 46 0e 		mov	ax,WORD PTR [bp+14]	;end_col
	*** 0006c1	2b 46 f6 		sub	ax,WORD PTR [bp-10]	;col
	*** 0006c4	48 			dec	ax
	*** 0006c5	75 0a 			jne	$I462
; Line 318
	*** 0006c7	8b 46 06 		mov	ax,WORD PTR [bp+6]	;screen
	*** 0006ca	24 bc 			and	al,188
	*** 0006cc	0c bc 			or	al,188
	*** 0006ce	89 46 fc 		mov	WORD PTR [bp-4],ax	;putscr
; Line 319
					$I462:
	*** 0006d1	ff 76 14 		push	WORD PTR [bp+20]	;bios
	*** 0006d4	ff 76 fc 		push	WORD PTR [bp-4]	;putscr
	*** 0006d7	e8 00 00 		call	_set_char_atr
	*** 0006da	83 c4 04 		add	sp,4
; Line 320
	*** 0006dd	e9 18 ff 		jmp	$FC453
; Line 321
					$FC450:
	*** 0006e0	ff 46 f8 		inc	WORD PTR [bp-8]	;row
					$F449:
	*** 0006e3	8b 46 f8 		mov	ax,WORD PTR [bp-8]	;row
	*** 0006e6	39 46 0c 		cmp	WORD PTR [bp+12],ax	;end_row
	*** 0006e9	7e 09 			jle	$FB451
; Line 300
; Line 301
	*** 0006eb	8b 46 0a 		mov	ax,WORD PTR [bp+10]	;start_col
	*** 0006ee	89 46 f6 		mov	WORD PTR [bp-10],ax	;col
	*** 0006f1	e9 07 ff 		jmp	$F452
					$FB451:
; Line 322
	*** 0006f4	2b c0 			sub	ax,ax
; Line 323
	*** 0006f6	5e 			pop	si
	*** 0006f7	5f 			pop	di
	*** 0006f8	8b e5 			mov	sp,bp
	*** 0006fa	5d 			pop	bp
	*** 0006fb	c3 			ret	

_set_box	ENDP
; Line 328
	PUBLIC	_end_box
_end_box	PROC NEAR
	*** 0006fc	55 			push	bp
	*** 0006fd	8b ec 			mov	bp,sp
	*** 0006ff	83 ec 12 		sub	sp,18
	*** 000702	57 			push	di
	*** 000703	56 			push	si
;	screen = -2
;	start_row = -8
;	start_col = -14
;	end_row = -18
;	end_col = -6
;	row = -12
;	col = -16
;	sav_row = -4
;	sav_col = -10
;	bios = 10
;	buffer = 8
;	sav_par = 6
;	page = 4
; Line 343
	*** 000704	8b 5e 04 		mov	bx,WORD PTR [bp+4]	;page
	*** 000707	8b c3 			mov	ax,bx
	*** 000709	d1 e3 			shl	bx,1
	*** 00070b	03 d8 			add	bx,ax
	*** 00070d	d1 e3 			shl	bx,1
	*** 00070f	03 d8 			add	bx,ax
	*** 000711	d1 e3 			shl	bx,1
	*** 000713	8b 76 06 		mov	si,WORD PTR [bp+6]	;sav_par
; Line 344
	*** 000716	03 f3 			add	si,bx
	*** 000718	8b 44 02 		mov	ax,WORD PTR [si+2]
	*** 00071b	89 46 f8 		mov	WORD PTR [bp-8],ax	;start_row
; Line 345
	*** 00071e	8b 4c 04 		mov	cx,WORD PTR [si+4]
	*** 000721	89 4e f2 		mov	WORD PTR [bp-14],cx	;start_col
; Line 346
	*** 000724	8b 54 06 		mov	dx,WORD PTR [si+6]
	*** 000727	89 56 ee 		mov	WORD PTR [bp-18],dx	;end_row
; Line 347
	*** 00072a	8b 5c 08 		mov	bx,WORD PTR [si+8]
	*** 00072d	89 5e fa 		mov	WORD PTR [bp-6],bx	;end_col
; Line 348
	*** 000730	8b 7c 0a 		mov	di,WORD PTR [si+10]
	*** 000733	89 7e fc 		mov	WORD PTR [bp-4],di	;sav_row
; Line 349
	*** 000736	8b 7c 0c 		mov	di,WORD PTR [si+12]
	*** 000739	89 7e f6 		mov	WORD PTR [bp-10],di	;sav_col
; Line 352
	*** 00073c	8b f0 			mov	si,ax
	*** 00073e	8b c2 			mov	ax,dx
	*** 000740	2b c6 			sub	ax,si
	*** 000742	2b cb 			sub	cx,bx
	*** 000744	f7 e9 			imul	cx
	*** 000746	d1 e0 			shl	ax,1
	*** 000748	8b 5e 04 		mov	bx,WORD PTR [bp+4]	;page
	*** 00074b	d1 e3 			shl	bx,1
	*** 00074d	8b 76 08 		mov	si,WORD PTR [bp+8]	;buffer
	*** 000750	01 00 			add	WORD PTR [bx][si],ax
; Line 354
	*** 000752	8b 46 f8 		mov	ax,WORD PTR [bp-8]	;start_row
	*** 000755	89 46 f4 		mov	WORD PTR [bp-12],ax	;row
	*** 000758	eb 3b 			jmp	SHORT $F477
					$FC481:
	*** 00075a	ff 46 f0 		inc	WORD PTR [bp-16]	;col
					$F480:
	*** 00075d	8b 46 fa 		mov	ax,WORD PTR [bp-6]	;end_col
	*** 000760	39 46 f0 		cmp	WORD PTR [bp-16],ax	;col
	*** 000763	7d 2d 			jge	$FC478
; Line 357
; Line 358
	*** 000765	ff 76 0a 		push	WORD PTR [bp+10]	;bios
	*** 000768	ff 76 f0 		push	WORD PTR [bp-16]	;col
	*** 00076b	ff 76 f4 		push	WORD PTR [bp-12]	;row
	*** 00076e	e8 00 00 		call	_set_curs
	*** 000771	83 c4 06 		add	sp,6
; Line 359
	*** 000774	ff 76 0a 		push	WORD PTR [bp+10]	;bios
	*** 000777	8b 5e 04 		mov	bx,WORD PTR [bp+4]	;page
	*** 00077a	d1 e3 			shl	bx,1
	*** 00077c	8b 76 08 		mov	si,WORD PTR [bp+8]	;buffer
	*** 00077f	8b 38 			mov	di,WORD PTR [bx][si]
	*** 000781	ff 35 			push	WORD PTR [di]
	*** 000783	8b fb 			mov	di,bx
	*** 000785	e8 00 00 		call	_set_char_atr
	*** 000788	83 c4 04 		add	sp,4
; Line 360
	*** 00078b	03 f7 			add	si,di
	*** 00078d	83 04 02 		add	WORD PTR [si],2
; Line 361
	*** 000790	eb c8 			jmp	SHORT $FC481
; Line 362
					$FC478:
	*** 000792	ff 46 f4 		inc	WORD PTR [bp-12]	;row
					$F477:
	*** 000795	8b 46 ee 		mov	ax,WORD PTR [bp-18]	;end_row
	*** 000798	39 46 f4 		cmp	WORD PTR [bp-12],ax	;row
	*** 00079b	7d 09 			jge	$FB479
; Line 355
; Line 356
	*** 00079d	8b 46 f2 		mov	ax,WORD PTR [bp-14]	;start_col
	*** 0007a0	89 46 f0 		mov	WORD PTR [bp-16],ax	;col
	*** 0007a3	eb b8 			jmp	SHORT $F480
	*** 0007a5	90 			nop	
					$FB479:
; Line 363
	*** 0007a6	8b 5e 04 		mov	bx,WORD PTR [bp+4]	;page
	*** 0007a9	d1 e3 			shl	bx,1
	*** 0007ab	8b 76 08 		mov	si,WORD PTR [bp+8]	;buffer
	*** 0007ae	ff 30 			push	WORD PTR [bx][si]
	*** 0007b0	e8 00 00 		call	_free
	*** 0007b3	83 c4 02 		add	sp,2
; Line 364
	*** 0007b6	ff 76 0a 		push	WORD PTR [bp+10]	;bios
	*** 0007b9	ff 76 f6 		push	WORD PTR [bp-10]	;sav_col
	*** 0007bc	ff 76 fc 		push	WORD PTR [bp-4]	;sav_row
	*** 0007bf	e8 00 00 		call	_set_curs
	*** 0007c2	83 c4 06 		add	sp,6
; Line 365
	*** 0007c5	2b c0 			sub	ax,ax
; Line 366
	*** 0007c7	5e 			pop	si
	*** 0007c8	5f 			pop	di
	*** 0007c9	8b e5 			mov	sp,bp
	*** 0007cb	5d 			pop	bp
	*** 0007cc	c3 			ret	
	*** 0007cd	90 			nop	

_end_box	ENDP
; Line 370
	PUBLIC	_set_curs
_set_curs	PROC NEAR
	*** 0007ce	55 			push	bp
	*** 0007cf	8b ec 			mov	bp,sp
;	bios = 8
;	col = 6
;	row = 4
; Line 374
	*** 0007d1	8b 5e 08 		mov	bx,WORD PTR [bp+8]	;bios
	*** 0007d4	c6 47 01 02 		mov	BYTE PTR [bx+1],2
; Line 375
	*** 0007d8	8a 46 04 		mov	al,BYTE PTR [bp+4]	;row
	*** 0007db	88 47 07 		mov	BYTE PTR [bx+7],al
; Line 376
	*** 0007de	8a 46 06 		mov	al,BYTE PTR [bp+6]	;col
	*** 0007e1	88 47 06 		mov	BYTE PTR [bx+6],al
; Line 377
	*** 0007e4	c6 47 03 00 		mov	BYTE PTR [bx+3],0
; Line 378
	*** 0007e8	53 			push	bx
	*** 0007e9	53 			push	bx
	*** 0007ea	b8 10 00 		mov	ax,16
	*** 0007ed	50 			push	ax
	*** 0007ee	e8 00 00 		call	_int86
; Line 380
	*** 0007f1	8b e5 			mov	sp,bp
	*** 0007f3	5d 			pop	bp
	*** 0007f4	c3 			ret	
	*** 0007f5	90 			nop	

_set_curs	ENDP
; Line 383
	PUBLIC	_get_curs
_get_curs	PROC NEAR
	*** 0007f6	55 			push	bp
	*** 0007f7	8b ec 			mov	bp,sp
;	bios = 4
; Line 385
	*** 0007f9	8b 5e 04 		mov	bx,WORD PTR [bp+4]	;bios
	*** 0007fc	c6 47 01 03 		mov	BYTE PTR [bx+1],3
; Line 386
	*** 000800	c6 47 03 00 		mov	BYTE PTR [bx+3],0
; Line 387
	*** 000804	53 			push	bx
	*** 000805	53 			push	bx
	*** 000806	b8 10 00 		mov	ax,16
	*** 000809	50 			push	ax
	*** 00080a	e8 00 00 		call	_int86
; Line 389
	*** 00080d	8b e5 			mov	sp,bp
	*** 00080f	5d 			pop	bp
	*** 000810	c3 			ret	
	*** 000811	90 			nop	

_get_curs	ENDP
; Line 392
	PUBLIC	_kill_curs
_kill_curs	PROC NEAR
	*** 000812	55 			push	bp
	*** 000813	8b ec 			mov	bp,sp
;	bios = 4
; Line 394
	*** 000815	8b 5e 04 		mov	bx,WORD PTR [bp+4]	;bios
	*** 000818	c6 47 01 01 		mov	BYTE PTR [bx+1],1
; Line 395
	*** 00081c	c6 47 03 00 		mov	BYTE PTR [bx+3],0
; Line 396
	*** 000820	c7 47 04 ff ff 		mov	WORD PTR [bx+4],-1
; Line 397
	*** 000825	53 			push	bx
	*** 000826	53 			push	bx
	*** 000827	b8 10 00 		mov	ax,16
	*** 00082a	50 			push	ax
	*** 00082b	e8 00 00 		call	_int86
; Line 399
	*** 00082e	8b e5 			mov	sp,bp
	*** 000830	5d 			pop	bp
	*** 000831	c3 			ret	

_kill_curs	ENDP
; Line 402
	PUBLIC	_restore_curs
_restore_curs	PROC NEAR
	*** 000832	55 			push	bp
	*** 000833	8b ec 			mov	bp,sp
;	bios = 4
; Line 404
	*** 000835	8b 5e 04 		mov	bx,WORD PTR [bp+4]	;bios
	*** 000838	c6 47 01 01 		mov	BYTE PTR [bx+1],1
; Line 405
	*** 00083c	c6 47 03 00 		mov	BYTE PTR [bx+3],0
; Line 406
	*** 000840	c7 47 04 07 06 		mov	WORD PTR [bx+4],1543
; Line 407
	*** 000845	53 			push	bx
	*** 000846	53 			push	bx
	*** 000847	b8 10 00 		mov	ax,16
	*** 00084a	50 			push	ax
	*** 00084b	e8 00 00 		call	_int86
; Line 409
	*** 00084e	8b e5 			mov	sp,bp
	*** 000850	5d 			pop	bp
	*** 000851	c3 			ret	

_restore_curs	ENDP
; Line 413
	PUBLIC	_set_char_atr
_set_char_atr	PROC NEAR
	*** 000852	55 			push	bp
	*** 000853	8b ec 			mov	bp,sp
;	bios = 6
;	atr_chr = 4
; Line 416
	*** 000855	8b 5e 06 		mov	bx,WORD PTR [bp+6]	;bios
	*** 000858	c6 47 01 09 		mov	BYTE PTR [bx+1],9
; Line 417
	*** 00085c	8a 46 04 		mov	al,BYTE PTR [bp+4]	;atr_chr
	*** 00085f	88 07 			mov	BYTE PTR [bx],al
; Line 418
	*** 000861	c7 47 04 01 00 		mov	WORD PTR [bx+4],1
; Line 419
	*** 000866	8a 46 05 		mov	al,BYTE PTR [bp+5]
	*** 000869	88 47 02 		mov	BYTE PTR [bx+2],al
; Line 420
	*** 00086c	c6 47 03 00 		mov	BYTE PTR [bx+3],0
; Line 421
	*** 000870	53 			push	bx
	*** 000871	53 			push	bx
	*** 000872	b8 10 00 		mov	ax,16
	*** 000875	50 			push	ax
	*** 000876	e8 00 00 		call	_int86
; Line 423
	*** 000879	8b e5 			mov	sp,bp
	*** 00087b	5d 			pop	bp
	*** 00087c	c3 			ret	
	*** 00087d	90 			nop	

_set_char_atr	ENDP
; Line 427
	PUBLIC	_get_char_atr
_get_char_atr	PROC NEAR
	*** 00087e	55 			push	bp
	*** 00087f	8b ec 			mov	bp,sp
;	bios = 4
; Line 429
	*** 000881	8b 5e 04 		mov	bx,WORD PTR [bp+4]	;bios
	*** 000884	c6 47 01 08 		mov	BYTE PTR [bx+1],8
; Line 430
	*** 000888	c6 47 03 00 		mov	BYTE PTR [bx+3],0
; Line 431
	*** 00088c	53 			push	bx
	*** 00088d	53 			push	bx
	*** 00088e	b8 10 00 		mov	ax,16
	*** 000891	50 			push	ax
	*** 000892	e8 00 00 		call	_int86
; Line 432
	*** 000895	8b 5e 04 		mov	bx,WORD PTR [bp+4]	;bios
	*** 000898	8b 07 			mov	ax,WORD PTR [bx]
; Line 433
	*** 00089a	8b e5 			mov	sp,bp
	*** 00089c	5d 			pop	bp
	*** 00089d	c3 			ret	

_get_char_atr	ENDP
; Line 436
	PUBLIC	_write_str
_write_str	PROC NEAR
	*** 00089e	55 			push	bp
	*** 00089f	8b ec 			mov	bp,sp
	*** 0008a1	83 ec 08 		sub	sp,8
	*** 0008a4	56 			push	si
;	i = -4
;	row = -2
;	col = -6
;	bios = 8
;	atr = 6
;	string = 4
; Line 441
	*** 0008a5	c7 46 fc 00 00 		mov	WORD PTR [bp-4],0	;i
; Line 444
	*** 0008aa	eb 33 			jmp	SHORT $L20006
					$FC506:
; Line 445
; Line 446
	*** 0008ac	ff 46 fc 		inc	WORD PTR [bp-4]	;i
	*** 0008af	ff 76 08 		push	WORD PTR [bp+8]	;bios
	*** 0008b2	8a 00 			mov	al,BYTE PTR [bx][si]
	*** 0008b4	98 			cbw	
	*** 0008b5	0b 46 06 		or	ax,WORD PTR [bp+6]	;atr
	*** 0008b8	50 			push	ax
	*** 0008b9	e8 96 ff 		call	_set_char_atr
	*** 0008bc	83 c4 04 		add	sp,4
; Line 447
	*** 0008bf	ff 76 08 		push	WORD PTR [bp+8]	;bios
	*** 0008c2	e8 31 ff 		call	_get_curs
	*** 0008c5	83 c4 02 		add	sp,2
; Line 448
	*** 0008c8	8b 5e 08 		mov	bx,WORD PTR [bp+8]	;bios
	*** 0008cb	8a 47 07 		mov	al,BYTE PTR [bx+7]
	*** 0008ce	2a e4 			sub	ah,ah
; Line 450
	*** 0008d0	8a 4f 06 		mov	cl,BYTE PTR [bx+6]
	*** 0008d3	2a ed 			sub	ch,ch
	*** 0008d5	41 			inc	cx
; Line 451
	*** 0008d6	53 			push	bx
	*** 0008d7	51 			push	cx
	*** 0008d8	50 			push	ax
	*** 0008d9	e8 f2 fe 		call	_set_curs
	*** 0008dc	83 c4 06 		add	sp,6
; Line 452
					$L20006:
	*** 0008df	8b 5e fc 		mov	bx,WORD PTR [bp-4]	;i
	*** 0008e2	8b 76 04 		mov	si,WORD PTR [bp+4]	;string
	*** 0008e5	80 38 00 		cmp	BYTE PTR [bx][si],0
	*** 0008e8	75 c2 			jne	$FC506
; Line 454
	*** 0008ea	5e 			pop	si
	*** 0008eb	8b e5 			mov	sp,bp
	*** 0008ed	5d 			pop	bp
	*** 0008ee	c3 			ret	
	*** 0008ef	90 			nop	

_write_str	ENDP
_TEXT	ENDS
END
